<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.demo.dao.UserMapper">
	<resultMap type="com.github.demo.model.User" id="userMapper">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="username" property="username" jdbcType="CHAR"/>
		<result column="password" property="password" jdbcType="CHAR"/>
		<result column="mobile" property="mobile" jdbcType="CHAR"/>
		<result column="type" property="type" jdbcType="BIT"/>
		<result column="status" property="status" jdbcType="BIT"/>
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
		<result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP"/>
   	</resultMap>
	
	<sql id="User_Base_Column_List">
		t.id,t.username,t.password,t.mobile,t.type,t.status,t.create_time,t.modified_time
	</sql>
	
	<select id="findById" parameterType="java.lang.Long" resultMap="userMapper">
		select 
		<include refid="User_Base_Column_List" /> 
		from mo_user t where t.id = #{id} 
		<if test="status != null">
			and t.status = #{status}
		</if>
	</select>
	
	<select id="findByCondition" parameterType="map" resultMap="userMapper">
		select 
		<include refid="User_Base_Column_List" /> 
		from mo_user t where 1=1
		<if test="user.status != null">
			and t.status = #{user.status}
		</if>
		<if test="user.beginTime != null">
			and t.create_time &gt; #{user.beginTime}
		</if>
		<if test="user.endTime != null">
			and t.create_time &lt; #{user.endTime}
		</if>
	</select>
	
	<select id="findByPage" resultMap="userMapper">
		select 
		<include refid="User_Base_Column_List" />
		from mo_user t where status = 1
	</select>
	
	<update id="update">
		update mo_user set username = #{username},password = #{password},
		mobile = #{mobile},type = #{type},status = #{status} where id = #{id}
	</update>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		insert into mo_user (username,
		password,mobile,type,status)
		values ( #{username,jdbcType=CHAR},
		#{password,jdbcType=CHAR},
		#{mobile,jdbcType=CHAR},
		#{type,jdbcType=BIT},
		#{status,jdbcType=BIT})
	</insert>
	
	<insert id="batchInsert" parameterType="java.util.List">
		insert into mo_user (username,
		password,mobile,type,status) values 
		<foreach collection="list" item="i" index="index" open="" close="" separator=",">
			( #{i.username},#{i.password},#{i.mobile},#{i.type},#{status})
		</foreach>
		on duplicate key update username VALUES(username),password VALUES(password),modified_time VALUES(modifiedTime)
	</insert>
	
</mapper>